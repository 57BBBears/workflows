name: Deploy with docker compose

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to. Used as a prefix to required secrets e.g. <environment>_SSH_HOST'
        required: false
        type: string
        default: ''
    secrets:
      SSH_HOST:
        description: 'SSH host address'
        required: true
      SSH_PORT:
        description: 'SSH port number'
        required: true
      SSH_USERNAME:
        description: 'SSH username'
        required: true
      SSH_SUDO_PASSWORD:
        description: 'Remote server user password'
        required: true
      SSH_PRIVATE_KEY:
        description: 'Content of SSH private key. e.g., raw content of ~/.ssh/id_rsa'
        required: true
      SSH_PROJECT_FOLDER:
        description: 'Project folder on a remote server to deploy in'
        required: true
      DOCKER_COMPOSE_FILE:
        description: 'Docker compose file'
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Deploy on a remote server
        env:
          ALL_SECRETS: ${{ toJSON(secrets) }}
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ inputs.environment != '' && secrets[ format('{0}_SSH_HOST', inputs.environment) ] || secrets.SSH_HOST }}
          username: ${{ inputs.environment != '' && secrets[ format('{0}_SSH_USERNAME', inputs.environment) ] || secrets.SSH_USERNAME }}
          key: ${{ inputs.environment != '' && secrets[ format('{0}_SSH_PRIVATE_KEY', inputs.environment) ] || secrets.SSH_PRIVATE_KEY }}
          port: ${{ inputs.environment != '' && secrets[ format('{0}_SSH_PORT', inputs.environment) ] || secrets.SSH_PORT }}
          envs: ALL_SECRETS
          script: |
            while read -rd $'' line
            do
                export "$line"
            done < <(jq -r <<<"$ALL_SECRETS" \
            'to_entries|map("\(.key)=\(.value)\u0000")[]')
            cd '${{ inputs.environment != '' && secrets[ format('{0}_SSH_PROJECT_FOLDER', inputs.environment) ] || secrets.SSH_PROJECT_FOLDER }}'
            git checkout ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
            git pull
            echo '${{ inputs.environment != '' && secrets[ format('{0}_SSH_SUDO_PASSWORD', inputs.environment) ] || secrets.SSH_SUDO_PASSWORD }}' | sudo -SE docker compose -f ${{ inputs.environment != '' && secrets[ format('{0}_DOCKER_COMPOSE_FILE', inputs.environment) ] || secrets.DOCKER_COMPOSE_FILE }} down
            sudo -E docker compose -f ${{ inputs.environment != '' && secrets[ format('{0}_DOCKER_COMPOSE_FILE', inputs.environment) ] || secrets.DOCKER_COMPOSE_FILE }} up -d --build
            echo '${{ inputs.environment != '' && secrets[ format('{0}_SSH_SUDO_PASSWORD', inputs.environment) ] || secrets.SSH_SUDO_PASSWORD }}' | sudo -S docker system prune --all --force